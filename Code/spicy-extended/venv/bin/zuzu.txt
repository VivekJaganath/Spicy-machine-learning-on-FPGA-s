Module(body=[Import(names=[alias(name='time', asname=None)]), Import(names=[alias(name='numpy', asname='np')]), ImportFrom(module='typing', names=[alias(name='Dict', asname=None)], level=0), Import(names=[alias(name='code', asname=None)]), FunctionDef(name='mmult', args=arguments(args=[arg(arg='a', annotation=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='ndarray', ctx=Load()), args=[Tuple(elts=[Num(n=32), Num(n=32)], ctx=Load()), Str(s='int32')], keywords=[])), arg(arg='b', annotation=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='ndarray', ctx=Load()), args=[Tuple(elts=[Num(n=32), Num(n=32)], ctx=Load()), Str(s='int32')], keywords=[])), arg(arg='c', annotation=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='ndarray', ctx=Load()), args=[Tuple(elts=[Num(n=32), Num(n=32)], ctx=Load()), Str(s='int32')], keywords=[])), arg(arg='d', annotation=Subscript(value=Name(id='Dict', ctx=Load()), slice=Index(value=Tuple(elts=[Str(s='str'), Str(s='str')], ctx=Load())), ctx=Load()))], vararg=None, kwonlyargs=[], kw_defaults=[], kwarg=None, defaults=[]), body=[Expr(value=Str(s='\n    #pragma SDS data access_pattern(a:SEQUENTIAL, b:SEQUENTIAL, c:SEQUENTIAL)\n    #pragma SDS data mem_attribute(a:PHYSICAL_CONTIGUOUS, b:PHYSICAL_CONTIGUOUS, c:PHYSICAL_CONTIGUOUS)\n    #pragma SDS data data_mover(a:AXIDMA_SIMPLE, b:AXIDMA_SIMPLE, c:AXIDMA_SIMPLE)\n    ')), Assign(targets=[Name(id='A_tmp', ctx=Store())], value=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='ndarray', ctx=Load()), args=[Tuple(elts=[Num(n=32), Num(n=32)], ctx=Load()), Str(s='int32')], keywords=[])), Assign(targets=[Name(id='B_tmp', ctx=Store())], value=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='ndarray', ctx=Load()), args=[Tuple(elts=[Num(n=32), Num(n=32)], ctx=Load()), Str(s='int32')], keywords=[])), Assign(targets=[Name(id='C_tmp', ctx=Store())], value=Subscript(value=Name(id='Dict', ctx=Load()), slice=Index(value=Tuple(elts=[Str(s='str'), Str(s='str')], ctx=Load())), ctx=Load())), Assign(targets=[Name(id='c_tmp', ctx=Store())], value=Dict(keys=[Str(s='brand'), Str(s='bulbul'), Str(s='year')], values=[Str(s='Ford'), Str(s='Shruthi'), Str(s='1964')])), Expr(value=Str(s='\n    #pragma HLS array_partition variable=A_tmp cyclic factor=16 dim=1\n    #pragma HLS array_partition variable=B_tmp block factor=16 dim=1\n    ')), For(target=Name(id='i', ctx=Store()), iter=Call(func=Name(id='range', ctx=Load()), args=[Subscript(value=Attribute(value=Name(id='a', ctx=Load()), attr='shape', ctx=Load()), slice=Index(value=Num(n=0)), ctx=Load())], keywords=[]), body=[For(target=Name(id='j', ctx=Store()), iter=Call(func=Name(id='range', ctx=Load()), args=[Subscript(value=Attribute(value=Name(id='a', ctx=Load()), attr='shape', ctx=Load()), slice=Index(value=Num(n=1)), ctx=Load())], keywords=[]), body=[Expr(value=Str(s='\n            #pragma HLS PIPELINE\n            ')), Assign(targets=[Subscript(value=Subscript(value=Name(id='A_tmp', ctx=Load()), slice=Index(value=Name(id='i', ctx=Load())), ctx=Load()), slice=Index(value=Name(id='j', ctx=Load())), ctx=Store())], value=Subscript(value=Subscript(value=Name(id='a', ctx=Load()), slice=Index(value=Name(id='i', ctx=Load())), ctx=Load()), slice=Index(value=Name(id='j', ctx=Load())), ctx=Load())), Assign(targets=[Subscript(value=Subscript(value=Name(id='B_tmp', ctx=Load()), slice=Index(value=Name(id='i', ctx=Load())), ctx=Load()), slice=Index(value=Name(id='j', ctx=Load())), ctx=Store())], value=Subscript(value=Subscript(value=Name(id='b', ctx=Load()), slice=Index(value=Name(id='i', ctx=Load())), ctx=Load()), slice=Index(value=Name(id='j', ctx=Load())), ctx=Load())), Assign(targets=[Name(id='c_tmp', ctx=Store())], value=Name(id='d', ctx=Load()))], orelse=[])], orelse=[]), For(target=Name(id='i', ctx=Store()), iter=Call(func=Name(id='range', ctx=Load()), args=[Subscript(value=Attribute(value=Name(id='a', ctx=Load()), attr='shape', ctx=Load()), slice=Index(value=Num(n=0)), ctx=Load())], keywords=[]), body=[For(target=Name(id='j', ctx=Store()), iter=Call(func=Name(id='range', ctx=Load()), args=[Subscript(value=Attribute(value=Name(id='a', ctx=Load()), attr='shape', ctx=Load()), slice=Index(value=Num(n=1)), ctx=Load())], keywords=[]), body=[Expr(value=Str(s='\n            #pragma HLS PIPELINE\n            ')), AnnAssign(target=Name(id='result', ctx=Store()), annotation=Str(s='int32'), value=Num(n=0), simple=1), For(target=Name(id='k', ctx=Store()), iter=Call(func=Name(id='range', ctx=Load()), args=[Subscript(value=Attribute(value=Name(id='b', ctx=Load()), attr='shape', ctx=Load()), slice=Index(value=Num(n=0)), ctx=Load())], keywords=[]), body=[AugAssign(target=Name(id='result', ctx=Store()), op=Add(), value=BinOp(left=Subscript(value=Subscript(value=Name(id='A_tmp', ctx=Load()), slice=Index(value=Name(id='i', ctx=Load())), ctx=Load()), slice=Index(value=Name(id='k', ctx=Load())), ctx=Load()), op=Mult(), right=Subscript(value=Subscript(value=Name(id='B_tmp', ctx=Load()), slice=Index(value=Name(id='k', ctx=Load())), ctx=Load()), slice=Index(value=Name(id='j', ctx=Load())), ctx=Load())))], orelse=[]), Assign(targets=[Subscript(value=Subscript(value=Name(id='c', ctx=Load()), slice=Index(value=Name(id='i', ctx=Load())), ctx=Load()), slice=Index(value=Name(id='j', ctx=Load())), ctx=Store())], value=Name(id='result', ctx=Load()))], orelse=[])], orelse=[])], decorator_list=[], returns=None), If(test=Compare(left=Name(id='__name__', ctx=Load()), ops=[Eq()], comparators=[Str(s='__main__')]), body=[Assign(targets=[Name(id='a', ctx=Store())], value=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='ndarray', ctx=Load()), args=[Tuple(elts=[Num(n=32), Num(n=32)], ctx=Load())], keywords=[keyword(arg='dtype', value=Str(s='int32')), keyword(arg='buffer', value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='linspace', ctx=Load()), args=[Num(n=1), Num(n=1024), Num(n=1024)], keywords=[keyword(arg='dtype', value=Str(s='int32'))]), attr='reshape', ctx=Load()), args=[Num(n=32), Num(n=32)], keywords=[]))])), Assign(targets=[Name(id='b', ctx=Store())], value=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='ndarray', ctx=Load()), args=[Tuple(elts=[Num(n=32), Num(n=32)], ctx=Load())], keywords=[keyword(arg='dtype', value=Str(s='int32')), keyword(arg='buffer', value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='linspace', ctx=Load()), args=[Num(n=1), Num(n=1024), Num(n=1024)], keywords=[keyword(arg='dtype', value=Str(s='int32'))]), attr='reshape', ctx=Load()), args=[Num(n=32), Num(n=32)], keywords=[]))])), Assign(targets=[Name(id='c', ctx=Store())], value=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='ndarray', ctx=Load()), args=[Tuple(elts=[Num(n=32), Num(n=32)], ctx=Load())], keywords=[keyword(arg='dtype', value=Str(s='int32')), keyword(arg='buffer', value=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='zeros', ctx=Load()), args=[Tuple(elts=[Num(n=32), Num(n=32)], ctx=Load())], keywords=[keyword(arg='dtype', value=Str(s='int32'))]))])), Assign(targets=[Name(id='t1', ctx=Store())], value=Call(func=Attribute(value=Name(id='time', ctx=Load()), attr='time', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Name(id='mmult', ctx=Load()), args=[Name(id='a', ctx=Load()), Name(id='b', ctx=Load()), Name(id='c', ctx=Load())], keywords=[])), Assign(targets=[Name(id='t2', ctx=Store())], value=Call(func=Attribute(value=Name(id='time', ctx=Load()), attr='time', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='elapsed', ctx=Store())], value=Call(func=Name(id='str', ctx=Load()), args=[BinOp(left=BinOp(left=Name(id='t2', ctx=Load()), op=Sub(), right=Name(id='t1', ctx=Load())), op=Mult(), right=Num(n=1000000))], keywords=[])), Expr(value=Call(func=Name(id='print', ctx=Load()), args=[BinOp(left=BinOp(left=Str(s='@time: '), op=Add(), right=Name(id='elapsed', ctx=Load())), op=Add(), right=Str(s=' us'))], keywords=[])), Expr(value=Call(func=Name(id='print', ctx=Load()), args=[BinOp(left=Str(s='a = %s\n'), op=Mod(), right=Name(id='a', ctx=Load()))], keywords=[])), Expr(value=Call(func=Name(id='print', ctx=Load()), args=[BinOp(left=Str(s='b = %s\n'), op=Mod(), right=Name(id='b', ctx=Load()))], keywords=[])), Expr(value=Call(func=Name(id='print', ctx=Load()), args=[BinOp(left=Str(s='c = %s\n'), op=Mod(), right=Name(id='c', ctx=Load()))], keywords=[]))], orelse=[])])