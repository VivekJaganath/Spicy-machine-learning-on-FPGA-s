Module(body=[Import(names=[alias(name='time', asname=None)]), Import(names=[alias(name='numpy', asname='np')]), ImportFrom(module='typing', names=[alias(name='Dict', asname=None)], level=0), Import(names=[alias(name='code', asname=None)]), FunctionDef(name='mmult', args=arguments(posonlyargs=[], args=[arg(arg='a', annotation=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='ndarray', ctx=Load()), args=[Tuple(elts=[Constant(value=32, kind=None), Constant(value=32, kind=None)], ctx=Load()), Constant(value='int32', kind=None)], keywords=[]), type_comment=None), arg(arg='b', annotation=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='ndarray', ctx=Load()), args=[Tuple(elts=[Constant(value=32, kind=None), Constant(value=32, kind=None)], ctx=Load()), Constant(value='int32', kind=None)], keywords=[]), type_comment=None), arg(arg='c', annotation=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='ndarray', ctx=Load()), args=[Tuple(elts=[Constant(value=32, kind=None), Constant(value=32, kind=None)], ctx=Load()), Constant(value='int32', kind=None)], keywords=[]), type_comment=None)], vararg=None, kwonlyargs=[], kw_defaults=[], kwarg=None, defaults=[]), body=[Expr(value=Constant(value='\n    #pragma SDS data access_pattern(a:SEQUENTIAL, b:SEQUENTIAL, c:SEQUENTIAL)\n    #pragma SDS data mem_attribute(a:PHYSICAL_CONTIGUOUS, b:PHYSICAL_CONTIGUOUS, c:PHYSICAL_CONTIGUOUS)\n    #pragma SDS data data_mover(a:AXIDMA_SIMPLE, b:AXIDMA_SIMPLE, c:AXIDMA_SIMPLE)\n    ', kind=None)), Assign(targets=[Name(id='A_tmp', ctx=Store())], value=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='ndarray', ctx=Load()), args=[Tuple(elts=[Constant(value=32, kind=None), Constant(value=32, kind=None)], ctx=Load()), Constant(value='int32', kind=None)], keywords=[]), type_comment=None), Assign(targets=[Name(id='B_tmp', ctx=Store())], value=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='ndarray', ctx=Load()), args=[Tuple(elts=[Constant(value=32, kind=None), Constant(value=32, kind=None)], ctx=Load()), Constant(value='int32', kind=None)], keywords=[]), type_comment=None), Assign(targets=[Name(id='v_tmp', ctx=Store())], value=Subscript(value=Name(id='Dict', ctx=Load()), slice=Index(value=Tuple(elts=[Constant(value='int', kind=None), Constant(value='list[int]', kind=None)], ctx=Load())), ctx=Load()), type_comment=None), Assign(targets=[Name(id='v_tmp', ctx=Store())], value=Dict(keys=[Constant(value=1, kind=None), Constant(value=2, kind=None), Constant(value=3, kind=None)], values=[List(elts=[Constant(value=8123123, kind=None), Constant(value=92000, kind=None)], ctx=Load()), List(elts=[Constant(value=7123123, kind=None), Constant(value=6213123, kind=None)], ctx=Load()), List(elts=[Constant(value=53123, kind=None), Constant(value=423123, kind=None)], ctx=Load())]), type_comment=None), Expr(value=Constant(value='\n    #pragma HLS array_partition variable=A_tmp cyclic factor=16 dim=1\n    #pragma HLS array_partition variable=B_tmp block factor=16 dim=1\n    ', kind=None)), For(target=Name(id='i', ctx=Store()), iter=Call(func=Name(id='range', ctx=Load()), args=[Subscript(value=Attribute(value=Name(id='a', ctx=Load()), attr='shape', ctx=Load()), slice=Index(value=Constant(value=0, kind=None)), ctx=Load())], keywords=[]), body=[For(target=Name(id='j', ctx=Store()), iter=Call(func=Name(id='range', ctx=Load()), args=[Subscript(value=Attribute(value=Name(id='a', ctx=Load()), attr='shape', ctx=Load()), slice=Index(value=Constant(value=1, kind=None)), ctx=Load())], keywords=[]), body=[Expr(value=Constant(value='\n            #pragma HLS PIPELINE\n            ', kind=None)), Assign(targets=[Subscript(value=Subscript(value=Name(id='A_tmp', ctx=Load()), slice=Index(value=Name(id='i', ctx=Load())), ctx=Load()), slice=Index(value=Name(id='j', ctx=Load())), ctx=Store())], value=Subscript(value=Subscript(value=Name(id='a', ctx=Load()), slice=Index(value=Name(id='i', ctx=Load())), ctx=Load()), slice=Index(value=Name(id='j', ctx=Load())), ctx=Load()), type_comment=None), Assign(targets=[Subscript(value=Subscript(value=Name(id='B_tmp', ctx=Load()), slice=Index(value=Name(id='i', ctx=Load())), ctx=Load()), slice=Index(value=Name(id='j', ctx=Load())), ctx=Store())], value=Subscript(value=Subscript(value=Name(id='b', ctx=Load()), slice=Index(value=Name(id='i', ctx=Load())), ctx=Load()), slice=Index(value=Name(id='j', ctx=Load())), ctx=Load()), type_comment=None)], orelse=[], type_comment=None)], orelse=[], type_comment=None), For(target=Name(id='i', ctx=Store()), iter=Call(func=Name(id='range', ctx=Load()), args=[Subscript(value=Attribute(value=Name(id='a', ctx=Load()), attr='shape', ctx=Load()), slice=Index(value=Constant(value=0, kind=None)), ctx=Load())], keywords=[]), body=[For(target=Name(id='j', ctx=Store()), iter=Call(func=Name(id='range', ctx=Load()), args=[Subscript(value=Attribute(value=Name(id='a', ctx=Load()), attr='shape', ctx=Load()), slice=Index(value=Constant(value=1, kind=None)), ctx=Load())], keywords=[]), body=[Expr(value=Constant(value='\n            #pragma HLS PIPELINE\n            ', kind=None)), AnnAssign(target=Name(id='result', ctx=Store()), annotation=Constant(value='int32', kind=None), value=Constant(value=0, kind=None), simple=1), For(target=Name(id='k', ctx=Store()), iter=Call(func=Name(id='range', ctx=Load()), args=[Subscript(value=Attribute(value=Name(id='b', ctx=Load()), attr='shape', ctx=Load()), slice=Index(value=Constant(value=0, kind=None)), ctx=Load())], keywords=[]), body=[AugAssign(target=Name(id='result', ctx=Store()), op=Add(), value=BinOp(left=Subscript(value=Subscript(value=Name(id='A_tmp', ctx=Load()), slice=Index(value=Name(id='i', ctx=Load())), ctx=Load()), slice=Index(value=Name(id='k', ctx=Load())), ctx=Load()), op=Mult(), right=Subscript(value=Subscript(value=Name(id='B_tmp', ctx=Load()), slice=Index(value=Name(id='k', ctx=Load())), ctx=Load()), slice=Index(value=Name(id='j', ctx=Load())), ctx=Load())))], orelse=[], type_comment=None), Assign(targets=[Subscript(value=Subscript(value=Name(id='c', ctx=Load()), slice=Index(value=Name(id='i', ctx=Load())), ctx=Load()), slice=Index(value=Name(id='j', ctx=Load())), ctx=Store())], value=Name(id='result', ctx=Load()), type_comment=None)], orelse=[], type_comment=None)], orelse=[], type_comment=None)], decorator_list=[], returns=None, type_comment=None), If(test=Compare(left=Name(id='__name__', ctx=Load()), ops=[Eq()], comparators=[Constant(value='__main__', kind=None)]), body=[Assign(targets=[Name(id='a', ctx=Store())], value=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='ndarray', ctx=Load()), args=[Tuple(elts=[Constant(value=32, kind=None), Constant(value=32, kind=None)], ctx=Load())], keywords=[keyword(arg='dtype', value=Constant(value='int32', kind=None)), keyword(arg='buffer', value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='linspace', ctx=Load()), args=[Constant(value=1, kind=None), Constant(value=1024, kind=None), Constant(value=1024, kind=None)], keywords=[keyword(arg='dtype', value=Constant(value='int32', kind=None))]), attr='reshape', ctx=Load()), args=[Constant(value=32, kind=None), Constant(value=32, kind=None)], keywords=[]))]), type_comment=None), Assign(targets=[Name(id='b', ctx=Store())], value=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='ndarray', ctx=Load()), args=[Tuple(elts=[Constant(value=32, kind=None), Constant(value=32, kind=None)], ctx=Load())], keywords=[keyword(arg='dtype', value=Constant(value='int32', kind=None)), keyword(arg='buffer', value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='linspace', ctx=Load()), args=[Constant(value=1, kind=None), Constant(value=1024, kind=None), Constant(value=1024, kind=None)], keywords=[keyword(arg='dtype', value=Constant(value='int32', kind=None))]), attr='reshape', ctx=Load()), args=[Constant(value=32, kind=None), Constant(value=32, kind=None)], keywords=[]))]), type_comment=None), Assign(targets=[Name(id='c', ctx=Store())], value=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='ndarray', ctx=Load()), args=[Tuple(elts=[Constant(value=32, kind=None), Constant(value=32, kind=None)], ctx=Load())], keywords=[keyword(arg='dtype', value=Constant(value='int32', kind=None)), keyword(arg='buffer', value=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='zeros', ctx=Load()), args=[Tuple(elts=[Constant(value=32, kind=None), Constant(value=32, kind=None)], ctx=Load())], keywords=[keyword(arg='dtype', value=Constant(value='int32', kind=None))]))]), type_comment=None), Assign(targets=[Name(id='t1', ctx=Store())], value=Call(func=Attribute(value=Name(id='time', ctx=Load()), attr='time', ctx=Load()), args=[], keywords=[]), type_comment=None), Expr(value=Call(func=Name(id='mmult', ctx=Load()), args=[Name(id='a', ctx=Load()), Name(id='b', ctx=Load()), Name(id='c', ctx=Load())], keywords=[])), Assign(targets=[Name(id='t2', ctx=Store())], value=Call(func=Attribute(value=Name(id='time', ctx=Load()), attr='time', ctx=Load()), args=[], keywords=[]), type_comment=None), Assign(targets=[Name(id='elapsed', ctx=Store())], value=Call(func=Name(id='str', ctx=Load()), args=[BinOp(left=BinOp(left=Name(id='t2', ctx=Load()), op=Sub(), right=Name(id='t1', ctx=Load())), op=Mult(), right=Constant(value=1000000, kind=None))], keywords=[]), type_comment=None), Expr(value=Call(func=Name(id='print', ctx=Load()), args=[BinOp(left=BinOp(left=Constant(value='@time: ', kind=None), op=Add(), right=Name(id='elapsed', ctx=Load())), op=Add(), right=Constant(value=' us', kind=None))], keywords=[])), Expr(value=Call(func=Name(id='print', ctx=Load()), args=[BinOp(left=Constant(value='a = %s\n', kind=None), op=Mod(), right=Name(id='a', ctx=Load()))], keywords=[])), Expr(value=Call(func=Name(id='print', ctx=Load()), args=[BinOp(left=Constant(value='b = %s\n', kind=None), op=Mod(), right=Name(id='b', ctx=Load()))], keywords=[])), Expr(value=Call(func=Name(id='print', ctx=Load()), args=[BinOp(left=Constant(value='c = %s\n', kind=None), op=Mod(), right=Name(id='c', ctx=Load()))], keywords=[]))], orelse=[])], type_ignores=[])